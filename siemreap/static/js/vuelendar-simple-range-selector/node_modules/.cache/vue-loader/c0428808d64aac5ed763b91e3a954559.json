{"remainingRequest":"/home/wolf/Projekte/Vue/fullstack-vue-code/vuelendar_not_from_book/vuelendar-simple-range-selector/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/wolf/Projekte/Vue/fullstack-vue-code/vuelendar_not_from_book/vuelendar-simple-range-selector/node_modules/vuelendar/components/vl-range-selector.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/wolf/Projekte/Vue/fullstack-vue-code/vuelendar_not_from_book/vuelendar-simple-range-selector/node_modules/vuelendar/components/vl-range-selector.vue","mtime":499162500000},{"path":"/home/wolf/Projekte/Vue/fullstack-vue-code/vuelendar_not_from_book/vuelendar-simple-range-selector/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wolf/Projekte/Vue/fullstack-vue-code/vuelendar_not_from_book/vuelendar-simple-range-selector/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/wolf/Projekte/Vue/fullstack-vue-code/vuelendar_not_from_book/vuelendar-simple-range-selector/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wolf/Projekte/Vue/fullstack-vue-code/vuelendar_not_from_book/vuelendar-simple-range-selector/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport VlCalendar from './vl-calendar'\nimport { DAYS_SHORTCUTS } from '../constants/days'\n\nexport default {\n  name: 'VlRangeSelector',\n  components: {\n    VlCalendar\n  },\n\n  props: {\n    startDate: String,\n    endDate: String,\n    customClasses: Object,\n    showWeeksNumber: Boolean,\n    defaultDate: String,\n    blockStartDate: Boolean,\n    disabled: Boolean,\n    disabledDates: Object,\n    isDisabled: Function,\n    singleMonth: Boolean,\n    enableSingleDate: Boolean,\n    firstDayOfWeek: {\n      type: String,\n      validator: v =>  DAYS_SHORTCUTS.includes(v),\n      default: 'mon'\n    }\n  },\n\n  methods: {\n    emitDate (date) {\n      if (this.blockStartDate || (this.startDate && !this.endDate && date >= this.startDate)) {\n        this.$emit('update:endDate', date)\n      } else {\n        this.$emit('update:startDate', date)\n\n        if (this.endDate) {\n          this.$emit('update:endDate', null)\n        }\n      }\n      this.$emit('focus')\n    },\n\n    isSelected (date) {\n      if (!this.startDate && !this.endDate) {\n        return false\n      } else if (!this.endDate) {\n        return this.startDate === date\n      } else {\n        return date >= this.startDate && date <= this.endDate\n      }\n    },\n\n    calculateDisabled (date) {\n      const isDisabled = this.isDisabled || (() => false)\n\n      if (this.disabled) {\n        return true\n      } else if (this.startDate && !this.endDate) {\n        return isDisabled(date) || (!this.enableSingleDate && date === this.startDate)\n      } else if (this.disabledDates) {\n        if (this.disabledDates.from) {\n          return date >= this.disabledDates.from\n        } else if (this.disabledDates.to) {\n          return date <= this.disabledDates.to\n        }\n      } else {\n        return isDisabled(date)\n      }\n    }\n  }\n}\n",{"version":3,"sources":["vl-range-selector.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"vl-range-selector.vue","sourceRoot":"node_modules/vuelendar/components","sourcesContent":["<template>\n  <vl-calendar\n    @input=\"date => emitDate(date)\"\n    :is-selected=\"isSelected\"\n    :is-disabled=\"calculateDisabled\"\n    :custom-classes=\"customClasses\"\n    :show-weeks-number=\"showWeeksNumber\"\n    :default-date=\"defaultDate\"\n    :single-month=\"singleMonth\"\n    :first-day-of-week=\"firstDayOfWeek\"\n    ref=\"calendar\"\n  />\n</template>\n\n<script>\nimport VlCalendar from './vl-calendar'\nimport { DAYS_SHORTCUTS } from '../constants/days'\n\nexport default {\n  name: 'VlRangeSelector',\n  components: {\n    VlCalendar\n  },\n\n  props: {\n    startDate: String,\n    endDate: String,\n    customClasses: Object,\n    showWeeksNumber: Boolean,\n    defaultDate: String,\n    blockStartDate: Boolean,\n    disabled: Boolean,\n    disabledDates: Object,\n    isDisabled: Function,\n    singleMonth: Boolean,\n    enableSingleDate: Boolean,\n    firstDayOfWeek: {\n      type: String,\n      validator: v =>  DAYS_SHORTCUTS.includes(v),\n      default: 'mon'\n    }\n  },\n\n  methods: {\n    emitDate (date) {\n      if (this.blockStartDate || (this.startDate && !this.endDate && date >= this.startDate)) {\n        this.$emit('update:endDate', date)\n      } else {\n        this.$emit('update:startDate', date)\n\n        if (this.endDate) {\n          this.$emit('update:endDate', null)\n        }\n      }\n      this.$emit('focus')\n    },\n\n    isSelected (date) {\n      if (!this.startDate && !this.endDate) {\n        return false\n      } else if (!this.endDate) {\n        return this.startDate === date\n      } else {\n        return date >= this.startDate && date <= this.endDate\n      }\n    },\n\n    calculateDisabled (date) {\n      const isDisabled = this.isDisabled || (() => false)\n\n      if (this.disabled) {\n        return true\n      } else if (this.startDate && !this.endDate) {\n        return isDisabled(date) || (!this.enableSingleDate && date === this.startDate)\n      } else if (this.disabledDates) {\n        if (this.disabledDates.from) {\n          return date >= this.disabledDates.from\n        } else if (this.disabledDates.to) {\n          return date <= this.disabledDates.to\n        }\n      } else {\n        return isDisabled(date)\n      }\n    }\n  }\n}\n</script>\n"]}]}