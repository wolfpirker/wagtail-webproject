{"remainingRequest":"/home/wolf/Projekte/Vue/fullstack-vue-code/vuelendar_not_from_book/vuelendar-simple-range-selector/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/wolf/Projekte/Vue/fullstack-vue-code/vuelendar_not_from_book/vuelendar-simple-range-selector/node_modules/vuelendar/components/vl-calendar-month.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/wolf/Projekte/Vue/fullstack-vue-code/vuelendar_not_from_book/vuelendar-simple-range-selector/node_modules/vuelendar/components/vl-calendar-month.vue","mtime":499162500000},{"path":"/home/wolf/Projekte/Vue/fullstack-vue-code/vuelendar_not_from_book/vuelendar-simple-range-selector/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wolf/Projekte/Vue/fullstack-vue-code/vuelendar_not_from_book/vuelendar-simple-range-selector/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/wolf/Projekte/Vue/fullstack-vue-code/vuelendar_not_from_book/vuelendar-simple-range-selector/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wolf/Projekte/Vue/fullstack-vue-code/vuelendar_not_from_book/vuelendar-simple-range-selector/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { createRange, transpose } from '../utils/CollectionUtils'\nimport { countDays, formatDate, getMonthName, getWeekNumbers } from '../utils/DatesUtils'\nimport { DAYS_NAMES, DAYS_SHORTCUTS } from '../constants/days'\n\nexport default {\n  name: 'VlCalendarMonth',\n  props: {\n    showWeeksNumber: Boolean,\n    month: Number,\n    year: Number,\n    isSelected: Function,\n    isDisabled: Function,\n    customClasses: Object,\n    firstDayOfWeek: {\n      type: String,\n      validator: v =>  DAYS_SHORTCUTS.includes(v),\n      default: 'mon'\n    }\n  },\n\n  computed: {\n    monthName () {\n      return getMonthName(this.month)\n    },\n\n    days () {\n      return createRange(1, countDays(this.month, this.year))\n    },\n\n    daysNames () {\n      return transpose(DAYS_NAMES, this.daysOffset)\n    },\n\n    daysOffset () {\n      return DAYS_SHORTCUTS.indexOf(this.firstDayOfWeek)\n    },\n\n    weekNumbers () {\n      return getWeekNumbers(this.month, this.year)\n    }\n  },\n\n  methods: {\n    getDate (day) {\n      return formatDate(day, this.month, this.year)\n    },\n\n    calculateClasses (day) {\n      const classes = []\n      if (day === 1) {\n        let offset = (new Date(this.year, this.month, 1).getDay() + 7 - this.daysOffset) % 7\n        if (offset > 0) {\n          classes.push(`vl-calendar-month__day--offset-${offset}`)\n        }\n      }\n\n      const date = this.getDate(day)\n      if (this.isSelected && this.isSelected(date)) {\n        classes.push('selected')\n\n        if (!this.isSelected(this.getDate(day - 1))){\n          classes.push('selected--first')\n        }\n\n        if (!this.isSelected(this.getDate(day + 1))){\n          classes.push('selected--last')\n        }\n      }\n\n      if (this.isDisabled && this.isDisabled(date)) {\n        classes.push('disabled')\n\n        if (!this.isDisabled(this.getDate(day - 1))){\n          classes.push('disabled--first')\n        }\n\n        if (!this.isDisabled(this.getDate(day + 1))){\n          classes.push('disabled--last')\n        }\n      }\n\n      Object.keys(this.customClasses || {}).forEach(cl => {\n        const fn = this.customClasses[cl]\n        if (fn(date)) {\n          classes.push(cl)\n        }\n      })\n\n      return classes\n    }\n  }\n}\n",{"version":3,"sources":["vl-calendar-month.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"vl-calendar-month.vue","sourceRoot":"node_modules/vuelendar/components","sourcesContent":["<template>\n  <div class=\"vl-calendar-month\">\n    <div class=\"vl-calendar-month__title\">\n      {{ monthName }} {{ year }}\n    </div>\n\n    <div class=\"vl-flex\">\n      <div\n        v-if=\"showWeeksNumber\"\n        class=\"vl-calendar-month__week-numbers-column\"\n      >\n        <div\n          v-for=\"number in weekNumbers\"\n          class=\"vl-calendar-month__week-number\"\n          :key=\"number\"\n        >\n          {{ number }}\n        </div>\n      </div>\n\n      <div>\n        <div class=\"vl-flex\">\n          <span\n            v-for=\"name in daysNames\"\n            :key=\"name\"\n            class=\"vl-calendar-month__week-day\"\n          >{{ name }}</span>\n        </div>\n\n        <div class=\"vl-flex vl-flex-wrap\">\n          <span\n            v-for=\"day in days\"\n            :key=\"day\"\n            @click=\"$emit('input', getDate(day))\"\n            class=\"vl-calendar-month__day\"\n            :class=\"calculateClasses(day)\"\n            :data-day=\"day\"\n            :data-month=\"month\"\n            :data-year=\"year\"\n          >\n            {{ day }}\n          </span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { createRange, transpose } from '../utils/CollectionUtils'\nimport { countDays, formatDate, getMonthName, getWeekNumbers } from '../utils/DatesUtils'\nimport { DAYS_NAMES, DAYS_SHORTCUTS } from '../constants/days'\n\nexport default {\n  name: 'VlCalendarMonth',\n  props: {\n    showWeeksNumber: Boolean,\n    month: Number,\n    year: Number,\n    isSelected: Function,\n    isDisabled: Function,\n    customClasses: Object,\n    firstDayOfWeek: {\n      type: String,\n      validator: v =>  DAYS_SHORTCUTS.includes(v),\n      default: 'mon'\n    }\n  },\n\n  computed: {\n    monthName () {\n      return getMonthName(this.month)\n    },\n\n    days () {\n      return createRange(1, countDays(this.month, this.year))\n    },\n\n    daysNames () {\n      return transpose(DAYS_NAMES, this.daysOffset)\n    },\n\n    daysOffset () {\n      return DAYS_SHORTCUTS.indexOf(this.firstDayOfWeek)\n    },\n\n    weekNumbers () {\n      return getWeekNumbers(this.month, this.year)\n    }\n  },\n\n  methods: {\n    getDate (day) {\n      return formatDate(day, this.month, this.year)\n    },\n\n    calculateClasses (day) {\n      const classes = []\n      if (day === 1) {\n        let offset = (new Date(this.year, this.month, 1).getDay() + 7 - this.daysOffset) % 7\n        if (offset > 0) {\n          classes.push(`vl-calendar-month__day--offset-${offset}`)\n        }\n      }\n\n      const date = this.getDate(day)\n      if (this.isSelected && this.isSelected(date)) {\n        classes.push('selected')\n\n        if (!this.isSelected(this.getDate(day - 1))){\n          classes.push('selected--first')\n        }\n\n        if (!this.isSelected(this.getDate(day + 1))){\n          classes.push('selected--last')\n        }\n      }\n\n      if (this.isDisabled && this.isDisabled(date)) {\n        classes.push('disabled')\n\n        if (!this.isDisabled(this.getDate(day - 1))){\n          classes.push('disabled--first')\n        }\n\n        if (!this.isDisabled(this.getDate(day + 1))){\n          classes.push('disabled--last')\n        }\n      }\n\n      Object.keys(this.customClasses || {}).forEach(cl => {\n        const fn = this.customClasses[cl]\n        if (fn(date)) {\n          classes.push(cl)\n        }\n      })\n\n      return classes\n    }\n  }\n}\n</script>\n"]}]}